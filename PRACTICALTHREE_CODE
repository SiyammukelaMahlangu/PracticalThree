SELECT *
FROM
  PRACTICALTHREE.PRACTICALTHREEDATA.SHOPING_TRENDS_DATA;
  
--Q1 - Find all records where Size is missing and the purchase_amount is greater than 50.

SELECT 
CUSTOMER_ID, SIZE, PURCHASE_AMOUNT, ITEM_PURCHASED
FROM
  PRACTICALTHREE.PRACTICALTHREEDATA.SHOPING_TRENDS_DATA
  WHERE SIZE IS NULL
AND PURCHASE_AMOUNT > 50;

--Q2 - List the total number of purchases grouped by Season, treating NULL values as 'Unknown Season'.

SELECT 
  COALESCE(SEASON, 'Unknown Season') AS SEASON,
  COUNT(ITEM_PURCHASED) AS TOTAL_PURCHASES
FROM PRACTICALTHREE.PRACTICALTHREEDATA.SHOPING_TRENDS_DATA
GROUP BY COALESCE(SEASON, 'Unknown Season')
ORDER BY Total_Purchases DESC;

 -- Q3 - Count how many customers used each Payment Method, treating NULLs as'Not Provided'.
SELECT 
    COALESCE(PAYMENT_METHOD, 'Not Provided') AS Payment_Method,
    COUNT(*) AS CUSTOMER_COUNT
FROM PRACTICALTHREE.PRACTICALTHREEDATA.SHOPING_TRENDS_DATA
GROUP BY COALESCE(Payment_Method, 'Not Provided')
ORDER BY CUSTOMER_COUNT DESC;

--Q4 - Show customers where Promo Code Used is NULL and Review Rating is below 3.0.
SELECT 
CUSTOMER_ID, PROMO_CODE_USED, REVIEW_RATING, ITEM_PURCHASED
FROM
  PRACTICALTHREE.PRACTICALTHREEDATA.SHOPING_TRENDS_DATA
  WHERE PROMO_CODE_USED IS NULL
AND REVIEW_RATING < 3;

--Q5 - Group customers by Shipping Type, and return the average purchase_amount, treating missing values as 0.
SELECT 
SHIPPING_TYPE,
AVG(COALESCE(purchase_amount, 0)) AS AVG_PURCHASE_AMOUNT
FROM PRACTICALTHREE.PRACTICALTHREEDATA.SHOPING_TRENDS_DATA
GROUP BY SHIPPING_TYPE
ORDER BY AVG_PURCHASE_AMOUNT DESC;

--Q6 - Display the number of purchases per Location only for those with more than 5 purchases and no NULL Payment Method.
SELECT location,
SUM(PREVIOUS_PURCHASES) AS TOTAL_PURCHASES
FROM PRACTICALTHREE.PRACTICALTHREEDATA.SHOPING_TRENDS_DATA
WHERE PAYMENT_METHOD IS NOT NULL
GROUP BY location
HAVING sum(PREVIOUS_PURCHASES) > 5;


--START
--Q7 - Create a column Spender Category that classifies customers using CASE: 'High' if amount > 80, 'Medium' if BETWEEN 50 AND 80,'Low' otherwise. Replace NULLs in purchase_amount with 0.
SELECT
CUSTOMER_ID, PURCHASE_AMOUNT
CASE
WHERE PURCHASE_AMOUNT > 80 THEN 'HIGH'
WHERE PURCHASE_AMOUNT BETWEEN 50 AND 80 THEN 'MEDIUM'
WHERE PURCHASE_AMOUNT < 'OTHERWISE'
WHERE PURCHASE_AMOUNT IS NULL THEN '0'
END AS SPENCER CATEGORY
FROM PRACTICALTHREE.PRACTICALTHREEDATA.SHOPING_TRENDS_DATA;

SELECT
    CUSTOMER_ID,
    PURCHASE_AMOUNT,
    CASE
        WHEN PURCHASE_AMOUNT IS NULL THEN '0'
        WHEN PURCHASE_AMOUNT > 80 THEN 'HIGH'
        WHEN PURCHASE_AMOUNT BETWEEN 50 AND 80 THEN 'MEDIUM'
        ELSE 'LOW'
    END AS SPENDER_CATEGORY
FROM PRACTICALTHREE.PRACTICALTHREEDATA.SHOPING_TRENDS_DATA;

-- Q9-
SELECT 
SUM(PURCHASE_AMOUNT) AS TOTAL_PURCHASE_AMOUNT,
FREQUECNY_OF_PURCHASES
GROUP BY FREQUENCY_OF_PURCHASES
WHERE NULL IS 'UNKNOWN';
